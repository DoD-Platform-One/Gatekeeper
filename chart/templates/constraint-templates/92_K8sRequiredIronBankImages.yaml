apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: k8srequiredironbankimages
spec:
  crd:
    spec:
      names:
        kind: K8sRequiredIronBankImages
      validation:
        # Schema for the `parameters` field
        openAPIV3Schema:
          properties:
            labels:
              type: array
              items:
                type: object
                properties:
                  key:
                    type: string
                  allowedRegex:
                    type: string
            exemptNamespaces:
              type: array
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package k8srequiredironbankimages
        name = input.metadata.name
        registries_allow := [,"registry1.dso.mil/ironbank", "registry.dso.mil"]
        registries_warn := ["registry.dso.mil"]
        in_allowed_registries(image) {
        startswith(image, registries_allow[i])
         }

        in_warning_registries(image) {
        startswith(image, registries_warn[i])
        }

        # Deny non-approved registries
        deny[msg] {
        image := input.spec.template.spec.containers[_].image
        not in_allowed_registries(image)
        msg := sprintf("Image '%v' in '%v' is not from approved registries", [image, name])
        }

        # Warn about non-Ironbank Images
        warn[msg] {
        image := input.spec.template.spec.containers[_].image
        in_warning_registries(image)
        msg := sprintf("Image '%v' in '%v' is not from Ironbank", [image, name])
        }

         
