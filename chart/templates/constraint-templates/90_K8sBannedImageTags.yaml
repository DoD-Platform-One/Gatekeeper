apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: k8sbannedimagetags
  labels:
    {{- include "gatekeeper.labels" . | nindent 4 }}
spec:
  crd:
    spec:
      names:
        kind: K8sBannedImageTags
      validation:
        # Schema for the `parameters` field
        openAPIV3Schema:
          properties:
            tags:
              type: array
              items:
                type: string
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package k8sbannedimagetags
        violation[{"msg": msg}] {
          container := input.review.object.spec.containers[_]
          img_split := split(container.image, ":")
          tag := img_split[count(img_split) - 1]
          banned := {s | s = input.parameters.tags[_]}
          banned[tag]
          msg := sprintf("container <%v> has banned image tag <%v>, banned tags are %v", [container.name, tag, banned])
        }

        violation[{"msg": msg}] {
          container := input.review.object.spec.containers[_]
          tag := [contains(container.image, ":")]
          not all(tag)
          msg := sprintf("container <%v> didn't specify an image tag <%v>", [container.name, container.image])
        }