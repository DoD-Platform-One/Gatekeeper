{{- if .Values.postUpgrade.cleanupCRD.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Chart.Name }}-crd-cleanup"
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    "helm.sh/hook": post-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}"
      labels:
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      serviceAccountName: "{{ .Chart.Name }}-crd-cleanup"
      containers:
        - name: crd-delete
          image: "{{ .Values.postUpgrade.cleanupCRD.image.repository }}:{{ .Values.postUpgrade.cleanupCRD.image.tag }}"
          imagePullPolicy: {{ .Values.postUpgrade.cleanupCRD.image.pullPolicy }}
          command: [ "/bin/sh", "-c", "--" ]
          args:  [ "kubectl delete 
              {{- range $k, $v := .Values.violations }}
              {{- if not $v.enabled  }} {{ $v.kind }}/{{ $v.name }} {{- end }}
              {{- end }} || true"]
      restartPolicy: Never
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "{{ .Chart.Name }}-crd-cleanup"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  namespace:  {{ .Release.Namespace }}
  name: "{{ .Chart.Name }}-crd-cleanup"
rules:
- apiGroups: ["constraints.gatekeeper.sh"]
  resources: ["*"]
  verbs: ["delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: "{{ .Chart.Name }}-crd-cleanup"
  namespace:  {{ .Release.Namespace }}
subjects:
 - kind: ServiceAccount
   name: "{{ .Chart.Name }}-crd-cleanup"
   namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: "{{ .Chart.Name }}-crd-cleanup"
  apiGroup: rbac.authorization.k8s.io
{{- end }}