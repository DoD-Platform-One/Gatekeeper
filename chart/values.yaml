replicas: 3
auditInterval: 300
auditMatchKindOnly: true
constraintViolationsLimit: 1000
auditFromCache: false
disableValidatingWebhook: false
validatingWebhookTimeoutSeconds: 3
enableDeleteOperations: false
experimentalEnableMutation: false
auditChunkSize: 500
logLevel: INFO
logDenies: false
emitAdmissionEvents: false
emitAuditEvents: false
postInstall:
  labelNamespace:
    enabled: true
    image:
      repository: registry1.dso.mil/ironbank/opensource/kubernetes-1.21/kubectl
      tag: v1.21.1
      pullPolicy: IfNotPresent
      pullSecrets: []
image:
  repository: registry1.dso.mil/ironbank/opensource/openpolicyagent/gatekeeper
  release: v3.5.1
  pullPolicy: IfNotPresent
  pullSecrets: []
podAnnotations:
  { container.seccomp.security.alpha.kubernetes.io/manager: runtime/default }
podLabels: {}
podCountLimit: 100
secretAnnotations: {}
controllerManager:
  hostNetwork: false
  priorityClassName: system-cluster-critical
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: gatekeeper.sh/operation
                  operator: In
                  values:
                    - webhook
            topologyKey: kubernetes.io/hostname
          weight: 100
  tolerations: []
  nodeSelector: { kubernetes.io/os: linux }
  resources:
    limits:
      cpu: 175m
      memory: 260Mi
    requests:
      cpu: 175m
      memory: 260Mi
audit:
  hostNetwork: false
  priorityClassName: system-cluster-critical
  affinity: {}
  tolerations: []
  nodeSelector: { kubernetes.io/os: linux }
  resources:
    limits:
      cpu: 1.2
      memory: 560Mi
    requests:
      cpu: 1.2
      memory: 560Mi
pdb:
  controllerManager:
    minAvailable: 1
service: {}
disabledBuiltins:
# Big Bang Constraints
violations:
  # Violations values are as follows:
  # <constraint name>:
  #   enabled: boolean - enables constraint
  #   enforcementAction: 'dryrun' or 'deny' - behavior of constraint when violation is found
  #   match: map - allows inclusions / exclusions to constraints
  #     namespaceSelector:
  #       matchExpressions:
  #       - {key: name, operator: In, values: [tenant]}
  #     OR
  #     excludedNamespaces:
  #     - <name of namespace to exclude>
  #   parameters: map - additional parameters specific to constraint
  allowedAppArmorProfiles:
    # By default the Iron Bank containers are either distroless or RHEL UBI so they do not have AppArmor.
    # This constraint should only be applied to namespaces with Debian derived (e.g. Ubuntu) Linux distros since it cannot ignore containers without AppArmor.
    enabled: false
    enforcementAction: dryrun
    match: {}
    parameters:
      allowedProfiles:
        - runtime/default
  allowedCapabilities:
    enabled: true
    enforcementAction: dryrun
    match: {}
    parameters:
      allowedCapabilities:  []
      requiredDropCapabilities:
        - all
  allowedDockerRegistries:
    enabled: true
    enforcementAction: deny
    match: {}
    parameters:
      repos:
        - registry1.dso.mil
        - registry.dso.mil
      exemptContainers: []
  allowedFlexVolumes:
    enabled: true
    enforcementAction: deny
    match: {}
    parameters:
      allowedFlexVolumes: []
      # - driver: "example/lvm"
  allowedHostFilesystem:
    enabled: true
    enforcementAction: dryrun
    match: {}
    parameters:
      allowedHostPaths: []
      # - readOnly: true
      #   pathPrefix: "/foo"
  allowedIPs:
    enabled: true
    enforcementAction: deny
    match: {}
    parameters:
      allowedIPs: []
      # - 1.2.3.4/32
  allowedProcMount:
    enabled: true
    enforcementAction: deny
    match: {}
    parameters:
      procMount: Default
  allowedSecCompProfiles:
    enabled: true
    enforcementAction: dryrun
    match: {}
    parameters:
      allowedProfiles:
      - "runtime/default"
  allowedUsers:
    enabled: true
    enforcementAction: dryrun
    match: {}
    parameters:
      runAsUser:
        rule: MustRunAsNonRoot # MustRunAs # RunAsAny
      fsGroup:
        rule: MustRunAs # MayRunAs # RunAsAny
        ranges:
          - min: 1000
            max: 65535
      runAsGroup:
        rule: MustRunAs # MayRunAs # RunAsAny
        ranges:
          - min: 1000
            max: 65535
      supplementalGroups:
        rule: MustRunAs # MayRunAs # RunAsAny
        ranges:
          - min: 1000
            max: 65535
  bannedImageTags:
    enabled: true
    enforcementAction: deny
    match: {}
    parameters:
      tags:
        - latest
  blockNodePort:
    enabled: true
    enforcementAction: dryrun
    match: {}
  containerRatio:
    enabled: true
    enforcementAction: dryrun
    match: {}
    parameters:
      ratio: '2'
  hostNetworking:
    enabled: true
    enforcementAction: deny
    match: {}
    parameters:
      hostNetwork: false
  httpsOnly:
    enabled: true
    enforcementAction: deny
    match: {}
  imageDigest:
    enabled: true
    enforcementAction: dryrun
    match: {}
  namespacesHaveIstio:
    enabled: true
    enforcementAction: dryrun
    match:
      namespaceSelector:
        matchExpressions:
          - key: admission.gatekeeper.sh/ignore
            operator: DoesNotExist
    parameters:
      labels:
        - allowedRegex: ^enabled
          key: istio-injection
  noBigContainers:
    enabled: true
    enforcementAction: dryrun
    match: {}
    parameters:
      cpu: 2000m
      exemptContainers:
        - ''
      memory: 4G
  noHostNamespace:
    enabled: true
    enforcementAction: deny
    match: {}
  noPrivilegedContainers:
    enabled: true
    enforcementAction: deny
    match:
      excludedNamespaces:
        # fluentbit needs privileged to read and store the buffer for tailing logs from the nodes
        - logging
  noDefaultServiceAccount:
    enabled: true
    enforcementAction: dryrun
    match: {}
  noPrivilegedEscalation:
    enabled: true
    enforcementAction: dryrun
    match: {}
  noSysctls:
    enabled: true
    enforcementAction: deny
    match: {}
    parameters:
      forbiddenSysctls:
        - '*'
  podsHaveIstio:
    enabled: true
    enforcementAction: dryrun
    match:
      excludedNamespaces:
        - istio-system
    parameters:
      annotations:
        - disallowedRegex: ^false
          key: sidecar.istio.io/inject
  readOnlyRoot:
    enabled: true
    enforcementAction: dryrun
    match: {}
  requiredLabels:
    enabled: true
    enforcementAction: dryrun
    match: {}
    parameters:
      labels:
        - allowedRegex: ''
          key: app.kubernetes.io/name
        - allowedRegex: ''
          key: app.kubernetes.io/instance
        - allowedRegex: ''
          key: app.kubernetes.io/version
        - allowedRegex: ''
          key: app.kubernetes.io/component
        - allowedRegex: ''
          key: app.kubernetes.io/part-of
        - allowedRegex: ''
          key: app.kubernetes.io/managed-by
  requiredProbes:
    enabled: true
    enforcementAction: dryrun
    match: {}
    parameters:
      probeTypes:
        - tcpSocket
        - httpGet
        - exec
      probes:
        - readinessProbe
        - livenessProbe
  restrictedTaint:
    enabled: true
    enforcementAction: deny
    match:
      excludedNamespaces:
        - monitoring # Prometheus Node Exporter needs to be able to run on all nodes, regardless of taint, to gather node metrics
    parameters:
      allowGlobalToleration: false
      restrictedTaint:
        effect: NoSchedule
        key: privileged
        value: 'true'
      # This section commented out but left in for future container exemption
      # exemptContainers:
      #   - node-exporter # specifically allows containers containing this string in the name for the prometheus-node-exporter containers
  selinuxPolicy:
    enabled: true
    enforcementAction: deny
    match:
      excludedNamespaces:
        # FluentBit needs selinux option type spc_t
        - logging
    parameters:
      allowedSELinuxOptions: []
  uniqueIngressHost:
    enabled: true
    enforcementAction: deny
    match: {}
  uniqueServiceSelector:
    enabled: true
    enforcementAction: dryrun
    match: {}
  volumeTypes:
    enabled: true
    enforcementAction: deny
    match: {}
    parameters:
      volumes:
        # - "*" # * may be used to allow all volume types
        - configMap
        - emptyDir
        - projected
        - secret
        - downwardAPI
        - persistentVolumeClaim

# Bigbang Additions
monitoring:
  enabled: false
networkPolicies:
  enabled: false
  # See `kubectl cluster-info` and then resolve to IP
  controlPlaneCidr: 0.0.0.0/0


